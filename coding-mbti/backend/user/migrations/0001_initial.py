# Generated by Django 3.1.2 on 2020-12-16 11:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('group', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(default=None, max_length=21, unique=True)),
                ('email', models.CharField(default=None, max_length=190, null=True, unique=True)),
                ('nickname', models.CharField(max_length=21)),
                ('password', models.TextField(default=None, null=True)),
                ('salt', models.TextField(default=None, null=True)),
                ('role', models.IntegerField(choices=[(1, 'Coder'), (2, 'Manager'), (3, 'Researcher')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('profile_img', models.ImageField(upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'ordering': ['-pk'],
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CodingStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.IntegerField(choices=[(1, 'Utrj'), (2, 'Utrc'), (3, 'Uttj'), (4, 'Uttc'), (5, 'Uirj'), (6, 'Uirc'), (7, 'Uitj'), (8, 'Uitc'), (9, 'Mtrj'), (10, 'Mtrc'), (11, 'Mttj'), (12, 'Mttc'), (13, 'Mirj'), (14, 'Mirc'), (15, 'Mitj'), (16, 'Mitc')])),
                ('UM_value', models.FloatField()),
                ('TI_value', models.FloatField()),
                ('RT_value', models.FloatField()),
                ('JC_value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Researcher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coder_group', to='group.group')),
                ('style', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.codingstyle')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
