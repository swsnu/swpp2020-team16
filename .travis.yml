dist: xenial

env:
  global:
    - COVERALLS_PARALLEL=true

jobs:
  include:
    - stage: lint_test_then_deploy
      name: "frontend lint, test, and deploy"
      language: node_js
      node_js:
        - "13.12.0"
      before_script:
        - cd coding-mbti
        - yarn global add create-react-app
        - yarn install
      script:
        - ./node_modules/.bin/eslint src/
        - yarn test -- --coverage
        - COVERALLS_PARALLEL=true COVERALLS_REPO_TOKEN=$coveralls_repo_token yarn run coveralls
      workspaces:
        create:
          name: workspace-front
          paths:
            - coverage/lcov.info
      before_deploy:
        - |
          if [[ $TRAVIS_BRANCH != $TRAVIS_PULL_REQUEST_BRANCH && $TRAVIS_BRANCH = 'dev' ]]; then
            yarn build:dev
          else
            yarn build:prd
          fi
        - cp ../aws-codedeploy-scripts/frontend/* ./build
        - zip -r coding-mbti-webservice build/*
        - mkdir -p deploy
        - mv coding-mbti-webservice.zip deploy/coding-mbti-webservice.zip
      deploy:
        - provider: s3                      # frontend dev s3
          access_key_id: $AWS_ACCESS_KEY
          secret_access_key: $AWS_SECRET_KEY
          bucket: coding-mbti-1-deploy
          local_dir: deploy
          region: us-east-1
          skip_cleanup: true                
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: dev
        - provider: codedeploy              # frontend dev codedeploy
          access_key_id: $AWS_ACCESS_KEY
          secret_access_key: $AWS_SECRET_KEY
          bucket: coding-mbti-1-deploy
          key: coding-mbti-webservice.zip
          bundle_type: zip
          application: coding-mbti-1-deploy
          deployment_group: coding-mbti-1-deploy-group
          region: us-east-1
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: dev
        - provider: s3                      # frontend master s3
          access_key_id: $AWS_ACCESS_KEY_2
          secret_access_key: $AWS_SECRET_KEY_2
          bucket: coding-mbti-2-deploy      
          local_dir: deploy
          region: us-east-1
          skip_cleanup: true                
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: master
        - provider: codedeploy              # frontend master codedeploy
          access_key_id: $AWS_ACCESS_KEY_2
          secret_access_key: $AWS_SECRET_KEY_2
          bucket: coding-mbti-2-deploy
          key: coding-mbti-webservice.zip
          bundle_type: zip
          application: coding-mbti-2-deploy
          deployment_group: coding-mbti-2-deploy-group
          region: us-east-1
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: master

    - name: "local environment backend lint and test"
      language: python
      python:
        - "3.7"
      services:
        - postgresql
      before_script:
        - cd ${TRAVIS_BUILD_DIR}/coding-mbti/backend/
        - pip install -r requirements.txt
        - psql -c 'create database travis_ci_test;' -U postgres
        - python manage.py makemigrations
        - python manage.py migrate
      script:
        - DJANGO_SETTINGS_MODULE=codingmbti_backend.settings pylint **/*.py --load-plugins pylint_django
        - coverage run --source='.' manage.py test
        - coverage xml
        - coverage html
        - COVERALLS_PARALLEL=true COVERALLS_REPO_TOKEN=$coveralls_repo_token coveralls
      workspaces:
        create:
          name: workspace-back
          paths:
            - coverage.xml
            - .coverage
            - .coveragerc

    - name: "docker environment backend lint, test, and deploy"
      language: python
      python:
        - "3.7"
      services:
        - docker
      before_script:
        - cd ${TRAVIS_BUILD_DIR}/coding-mbti/backend/local-docker/local-docker-starter-back
        - ./install-after-remove.sh
        - cd ${TRAVIS_BUILD_DIR}/coding-mbti/backend/
      script:
        - ./local-docker/local-docker-tester-back/init-pylint.sh
        - ./local-docker/local-docker-tester-back/init-test.sh
      before_deploy:
        - mkdir -p ../backend-build
        - cp -r ./* ../backend-build
        - cp ../../aws-codedeploy-scripts/backend/* ../backend-build
        - zip -r coding-mbti-backend ../backend-build/*
        - mkdir -p backend-deploy
        - mv coding-mbti-backend.zip backend-deploy/coding-mbti-backend.zip
      deploy:
        - provider: s3                      # backend dev s3
          access_key_id: $AWS_ACCESS_KEY_3
          secret_access_key: $AWS_SECRET_KEY_3
          bucket: coding-mbti-3-deploy
          local_dir: backend-deploy
          region: us-east-1
          skip_cleanup: true                
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: dev
        - provider: codedeploy              # backend dev codedeploy
          access_key_id: $AWS_ACCESS_KEY_3
          secret_access_key: $AWS_SECRET_KEY_3
          bucket: coding-mbti-3-deploy
          key: coding-mbti-backend.zip
          bundle_type: zip
          application: coding-mbti-3-deploy
          deployment_group: coding-mbti-3-deploy-group
          region: us-east-1
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: dev
        - provider: s3                      # backend master s3
          access_key_id: $AWS_ACCESS_KEY_4
          secret_access_key: $AWS_SECRET_KEY_4
          bucket: coding-mbti-4-deploy      
          local_dir: backend-deploy
          region: us-east-1
          skip_cleanup: true                
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: master
        - provider: codedeploy              # backend master codedeploy
          access_key_id: $AWS_ACCESS_KEY_4
          secret_access_key: $AWS_SECRET_KEY_4
          bucket: coding-mbti-4-deploy
          key: coding-mbti-backend.zip
          bundle_type: zip
          application: coding-mbti-4-deploy
          deployment_group: coding-mbti-4-deploy-group
          region: us-east-1
          wait_until_deployed: true
          on:
            repo: swsnu/swpp2020-team16
            branch: master

    - stage: send_coverage_to_sonarcloud
      name: "send coverage to sonarcloud"
      language: node_js
      node_js:
        - "13.12.0"
      addons:
        sonarcloud:
          organization: "swpp-2020-mbti"
          token:
            secure: "dh+0tu9v0HMRu2TK/hx4tY3e4fx3pKs63fbjboeNseqc/e46VV6rL0blw1IjJ5V3CQn/GW7UBF5u3yBP9NVvwJPk6xMj9QkK/x+19vNB7Yp9oUVzN6fQybt0keHxf3yMBrLLTQdSqxB1pMZJB4TUfjz77YeOLMOvp9tjv506LrsWCXsh7jz2/44pHP48WWbCO9df34/vsRDfKd97MmHj5A3q2Zd0Wl0qCGB+fcyKK2CeXdU3PnwCsm16Kuzb/c8rt3Kv0zDk811Sdvoau5Gs0c9beMLE8P7Nslc/TrenXsUotaCYtN2/1XIn0uhywyxiRgNwpO6hw9k98RDsZJKNQ5T8EndMFTi9V8moUZrEjMNjIbjlWapxCVHuoebHV5zW3B1B0hchtJlUO5RUx93DGLYZhrId00d2P9o0KdQOcoRo3KcMQzQFRwzGkMnL/CjUj2ASLq0XsU6mV88So/c8CtAL3aImFYvbvDsHCLyuZxrqEA11Sx5Th5MD84x3Dj8DbIAUr1NqywKxdEwN+NTpPRCtbO7MFC7IjE4OwxuSI7HdLZFJNtkMOJnQ+1HWUHiSRjUndkazAhvFG5vllRTubZSkJFdxS0iz6JsfXZiaB8eRbg8ul3lWG3hv//yMDKYu4mh5cHNZ3LSE+PTtDnOTCwWWkc4luCChKONJiZS8CYo="
      workspaces:
        use: 
          - workspace-front
          - workspace-back
      before_script:
        - cd coding-mbti
        - awk 'NR==6 {$0="        <source>/home/travis/build/swsnu/swpp2020-team16/coding-mbti/backend/</source>"} 1' backend/coverage.xml > backend/new_coverage.xml
        - rm backend/coverage.xml
        - mv backend/new_coverage.xml backend/coverage.xml
      script:
        - sonar-scanner

notifications:
  webhooks: https://coveralls.io/webhook?repo_token=$coveralls_repo_token
  slack: coding-mbti:mpufjN3PylzT8q8HgpXJDdun
